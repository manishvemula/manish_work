## @file
#  Produces the UEFI Random Number Generator protocol
#
#  This module will leverage Intel Secure Key technology to produce the Random
#  Number Generator protocol, which is used to provide high-quality random numbers
#  for use in applications, or entropy for seeding other random number generators.
#  Refer to http://software.intel.com/en-us/articles/intel-digital-random-number
#  -generator-drng-software-implementation-guide/ for more information about Intel
#  Secure Key technology.
#
#  Copyright (c) 2013 - 2018, Intel Corporation. All rights reserved.<BR>
#  (C) Copyright 2015 Hewlett Packard Enterprise Development LP<BR>
#  Copyright (c) 2021 - 2022, Arm Limited. All rights reserved.<BR>
#  SPDX-License-Identifier: BSD-2-Clause-Patent
#
##

# DO NOT EDIT
# FILE auto-generated

[Defines]
  INF_VERSION                = 0x00010017
  BASE_NAME                  = RngDxe
  FILE_GUID                  = B981A835-6EE8-4f4c-AE0B-210AA0BFBF01
  MODULE_TYPE                = DXE_DRIVER
  VERSION_STRING             = 1.0
  ENTRY_POINT                = RngDriverEntry
  UNLOAD_IMAGE               = RngDriverUnLoad
  MODULE_UNI_FILE            = RngDxe.uni

[Packages.X64]
  MdeModulePkg/MdeModulePkg.dec
  MdePkg/MdePkg.dec
  OvmfPkg/OvmfPkg.dec

[Binaries.X64]
  PE32|RngDxe.efi
  DXE_DEPEX|RngDxe.depex

[PatchPcd.X64]

[Protocols.X64]
  ## PRODUCES
  gEfiRngProtocolGuid

  ## SOMETIMES_CONSUMES
  gPcdProtocolGuid

  ## CONSUMES
  gEfiPcdProtocolGuid

  ## SOMETIMES_CONSUMES
  gGetPcdInfoProtocolGuid

  ## SOMETIMES_CONSUMES
  gEfiGetPcdInfoProtocolGuid

  ## SOMETIMES_CONSUMES
  gEfiDevicePathProtocolGuid

  ## CONSUMES
  gEfiDevicePathUtilitiesProtocolGuid

  ## SOMETIMES_CONSUMES
  gEfiDevicePathToTextProtocolGuid

  ## SOMETIMES_CONSUMES
  gEfiDevicePathFromTextProtocolGuid

  ## SOMETIMES_PRODUCES
  gEfiDriverBindingProtocolGuid

  ## SOMETIMES_CONSUMES
  gEfiSimpleTextOutProtocolGuid

  ## SOMETIMES_CONSUMES
  gEfiGraphicsOutputProtocolGuid

  ## SOMETIMES_CONSUMES
  gEfiHiiFontProtocolGuid

  ## SOMETIMES_CONSUMES
  gEfiSimpleFileSystemProtocolGuid

  ## SOMETIMES_CONSUMES # Consumes if gEfiGraphicsOutputProtocolGuid uninstalled
  gEfiUgaDrawProtocolGuid

  ## SOMETIMES_PRODUCES # User chooses to produce it
  gEfiComponentNameProtocolGuid

  ## SOMETIMES_PRODUCES # User chooses to produce it
  gEfiComponentName2ProtocolGuid

  ## SOMETIMES_PRODUCES # User chooses to produce it
  gEfiDriverConfigurationProtocolGuid

  ## SOMETIMES_PRODUCES # User chooses to produce it
  gEfiDriverConfiguration2ProtocolGuid

  ## SOMETIMES_PRODUCES # User chooses to produce it
  gEfiDriverDiagnosticsProtocolGuid

  ## SOMETIMES_PRODUCES # User chooses to produce it
  gEfiDriverDiagnostics2ProtocolGuid

  ## SOMETIMES_CONSUMES
  gEfiLoadedImageProtocolGuid


[Ppis.X64]

[Guids.X64]
  ## SOMETIMES_PRODUCES    ## GUID        # Unique ID of the algorithm for RNG
  gEfiRngAlgorithmSp80090Hash256Guid

  ## SOMETIMES_PRODUCES    ## GUID        # Unique ID of the algorithm for RNG
  gEfiRngAlgorithmSp80090Hmac256Guid

  ## SOMETIMES_PRODUCES    ## GUID        # Unique ID of the algorithm for RNG
  gEfiRngAlgorithmSp80090Ctr256Guid

  ## SOMETIMES_PRODUCES    ## GUID        # Unique ID of the algorithm for RNG
  gEfiRngAlgorithmX9313DesGuid

  ## SOMETIMES_PRODUCES    ## GUID        # Unique ID of the algorithm for RNG
  gEfiRngAlgorithmX931AesGuid

  ## SOMETIMES_PRODUCES    ## GUID        # Unique ID of the algorithm for RNG
  gEfiRngAlgorithmRaw

  ## SOMETIMES_PRODUCES    ## GUID        # Unique ID of the algorithm for RNG
  gEdkiiRngAlgorithmUnSafe

  ## SOMETIMES_CONSUMES  ## Event
  gEfiEventReadyToBootGuid

  ## SOMETIMES_CONSUMES  ## Event
  gEfiEventAfterReadyToBootGuid

  ## SOMETIMES_CONSUMES  ## Event
  gEfiEventLegacyBootGuid

  ## SOMETIMES_CONSUMES  ## Variable
  gEfiGlobalVariableGuid

  ## SOMETIMES_CONSUMES  ## SystemTable
  gEfiAcpi20TableGuid

  ## SOMETIMES_CONSUMES  ## SystemTable
  gEfiAcpi10TableGuid

  ## CONSUMES  ## SystemTable
  gEfiHobListGuid

  ## CONSUMES
  gUefiOvmfPkgPlatformInfoGuid


[PcdEx.X64]

[LibraryClasses.X64]
## @LIB_INSTANCES
#  MdePkg/Library/DxePcdLib/DxePcdLib.inf
#  MdePkg/Library/RegisterFilterLibNull/RegisterFilterLibNull.inf
#  MdePkg/Library/BaseMemoryLibRepStr/BaseMemoryLibRepStr.inf
#  MdePkg/Library/BaseLib/BaseLib.inf
#  MdePkg/Library/TdxLib/TdxLib.inf
#  OvmfPkg/Library/MemDebugLogLib/MemDebugLogLibNull.inf
#  MdePkg/Library/BaseDebugPrintErrorLevelLib/BaseDebugPrintErrorLevelLib.inf
#  MdePkg/Library/BasePrintLib/BasePrintLib.inf
#  MdePkg/Library/BaseIoLibIntrinsic/BaseIoLibIntrinsicSev.inf
#  OvmfPkg/Library/PlatformDebugLibIoPort/PlatformDebugLibIoPort.inf
#  OvmfPkg/Library/CcProbeLib/DxeCcProbeLib.inf
#  MdePkg/Library/UefiBootServicesTableLib/UefiBootServicesTableLib.inf
#  MdePkg/Library/UefiMemoryAllocationLib/UefiMemoryAllocationLib.inf
#  MdePkg/Library/UefiRuntimeServicesTableLib/UefiRuntimeServicesTableLib.inf
#  MdePkg/Library/UefiDevicePathLibDevicePathProtocol/UefiDevicePathLibDevicePathProtocol.inf
#  MdePkg/Library/UefiLib/UefiLib.inf
#  MdePkg/Library/BasePciExpressLib/BasePciExpressLib.inf
#  MdePkg/Library/BasePciCf8Lib/BasePciCf8Lib.inf
#  MdePkg/Library/StackCheckLibNull/StackCheckLibNull.inf
#  MdePkg/Library/DxeHobLib/DxeHobLib.inf
#  OvmfPkg/Library/DxePciLibI440FxQ35/DxePciLibI440FxQ35.inf
#  MdePkg/Library/UefiDriverEntryPoint/UefiDriverEntryPoint.inf
#  OvmfPkg/Library/AcpiTimerLib/DxeAcpiTimerLib.inf
#  MdePkg/Library/BaseRngLib/BaseRngLib.inf

[Depex.X64]
#  (TRUE) AND (gEfiPcdProtocolGuid) AND (gEfiPcdProtocolGuid) AND (gEfiPcdProtocolGuid) AND (gEfiPcdProtocolGuid) AND (gEfiDevicePathUtilitiesProtocolGuid) AND (gEfiDevicePathUtilitiesProtocolGuid) AND (gEfiDevicePathUtilitiesProtocolGuid) AND (gEfiDevicePathUtilitiesProtocolGuid) AND (gEfiBdsArchProtocolGuid AND gEfiCpuArchProtocolGuid AND gEfiMetronomeArchProtocolGuid AND gEfiMonotonicCounterArchProtocolGuid AND gEfiRealTimeClockArchProtocolGuid AND gEfiResetArchProtocolGuid AND gEfiRuntimeArchProtocolGuid AND gEfiSecurityArchProtocolGuid AND gEfiTimerArchProtocolGuid AND gEfiVariableWriteArchProtocolGuid AND gEfiVariableArchProtocolGuid AND gEfiWatchdogTimerArchProtocolGuid)

[UserExtensions.TianoCore."ExtraFiles"]
RngDxeExtra.uni



#
# The following information is for reference only and not required by the build tools.
#
#  VALID_ARCHITECTURES           = IA32 X64 AARCH64 ARM
#

[BuildOptions.X64]
## @AsBuilt
##   GCC:DEBUG_GCC5_X64_ASLPP_FLAGS = -x c -E -include AutoGen.h
##   GCC:DEBUG_GCC5_X64_ASLDLINK_FLAGS = -nostdlib -Wl,-n,-q,--gc-sections -z common-page-size=0x40 -Wl,--defsym=PECOFF_HEADER_SIZE=0 -Wl,--script=$(EDK_TOOLS_PATH)/Scripts/GccBase.lds -Wl,--entry,ReferenceAcpiTable -u ReferenceAcpiTable -Wl,-m,elf_x86_64
##   GCC:DEBUG_GCC5_X64_GENFW_FLAGS = 
##   GCC:DEBUG_GCC5_X64_OBJCOPY_FLAGS = 
##   GCC:DEBUG_GCC5_X64_DEPS_FLAGS = -MMD -MF $@.deps
##   GCC:DEBUG_GCC5_X64_ASM_FLAGS = -c -x assembler -imacros AutoGen.h -m64
##   GCC:DEBUG_GCC5_X64_CC_FLAGS = -g -Os -fshort-wchar -fno-builtin -fno-strict-aliasing -Wall -Werror -Wno-array-bounds -include AutoGen.h -fno-common -fstack-protector -ffunction-sections -fdata-sections -DSTRING_ARRAY_NAME=$(BASE_NAME)Strings -mstack-protector-guard=global -m64 "-DEFIAPI=__attribute__((ms_abi))" -maccumulate-outgoing-args -mno-red-zone -Wno-address -mcmodel=small -fpie -fno-asynchronous-unwind-tables -Wno-address  -fno-omit-frame-pointer -flto -DUSING_LTO -mno-mmx -mno-sse -D DISABLE_NEW_DEPRECATED_INTERFACES -D TDX_GUEST_SUPPORTED -D ENABLE_MD5_DEPRECATED_INTERFACES
##   GCC:DEBUG_GCC5_X64_ASMLINK_FLAGS = /nologo /tiny
##   GCC:DEBUG_GCC5_X64_VFR_FLAGS = -l -n
##   GCC:DEBUG_GCC5_X64_ASLCC_FLAGS = -x c -fno-lto -m64
##   GCC:DEBUG_GCC5_X64_APP_FLAGS = 
##   GCC:DEBUG_GCC5_X64_NASM_FLAGS = -f elf64
##   GCC:DEBUG_GCC5_X64_OPTROM_FLAGS = -e
##   GCC:DEBUG_GCC5_X64_DTC_FLAGS = -H epapr
##   GCC:DEBUG_GCC5_X64_SYMRENAME_FLAGS = Symbol renaming not needed for
##   GCC:DEBUG_GCC5_X64_RC_FLAGS = -I binary -O elf64-x86-64        -B i386        --rename-section .data=.hii
##   GCC:DEBUG_GCC5_X64_PP_FLAGS = -E -x assembler-with-cpp -include AutoGen.h
##   GCC:DEBUG_GCC5_X64_VFRPP_FLAGS = -x c -E -DVFRCOMPILE --include $(MODULE_NAME)StrDefs.h
##   GCC:DEBUG_GCC5_X64_DLINK_FLAGS = -nostdlib -Wl,-n,-q,--gc-sections -z common-page-size=0x40 -Wl,--entry,$(IMAGE_ENTRY_POINT) -u $(IMAGE_ENTRY_POINT) -Wl,-Map,$(DEST_DIR_DEBUG)/$(BASE_NAME).map,--whole-archive -Wl,-melf_x86_64,--oformat=elf64-x86-64,-pie -flto -Os
##   GCC:DEBUG_GCC5_X64_ASL_FLAGS = 
##   GCC:DEBUG_GCC5_X64_NASMB_FLAGS = -f bin
##   GCC:DEBUG_GCC5_X64_DLINK2_FLAGS = -Wl,--defsym=PECOFF_HEADER_SIZE=0x228 -Wl,--script=$(EDK_TOOLS_PATH)/Scripts/GccBase.lds -Wno-error
